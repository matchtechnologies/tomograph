[
  {
    "path": "/platform/api/v1/accounts",
    "method": "POST",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "$ref": "#/definitions/platform_account",
          "definitions": {
            "platform_account": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "description": "Account ID"
                },
                "name": {
                  "type": "string",
                  "description": "Name of the account"
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "401",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/platform/api/v1/accounts/{account_id}",
    "method": "GET",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "$ref": "#/definitions/platform_account",
          "definitions": {
            "platform_account": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "description": "Account ID"
                },
                "name": {
                  "type": "string",
                  "description": "Name of the account"
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "401",
        "body": {
        },
        "content-type": ""
      },
      {
        "status": "404",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/platform/api/v1/accounts/{account_id}",
    "method": "PATCH",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "$ref": "#/definitions/platform_account",
          "definitions": {
            "platform_account": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "description": "Account ID"
                },
                "name": {
                  "type": "string",
                  "description": "Name of the account"
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "401",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/platform/api/v1/accounts/{account_id}",
    "method": "DELETE",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
        },
        "content-type": ""
      },
      {
        "status": "401",
        "body": {
        },
        "content-type": ""
      },
      {
        "status": "404",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/platform/api/v1/accounts/{account_id}/account_users",
    "method": "GET",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "type": "array",
          "description": "Array of account users",
          "items": {
            "type": "object",
            "properties": {
              "account_id": {
                "type": "integer",
                "description": "The ID of the user"
              },
              "user_id": {
                "type": "integer",
                "description": "The ID of the user"
              },
              "role": {
                "type": "string",
                "description": "whether user is an administrator or agent"
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "401",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/platform/api/v1/accounts/{account_id}/account_users",
    "method": "POST",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "properties": {
            "account_id": {
              "type": "integer",
              "description": "The ID of the user"
            },
            "user_id": {
              "type": "integer",
              "description": "The ID of the user"
            },
            "role": {
              "type": "string",
              "description": "whether user is an administrator or agent"
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "401",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/platform/api/v1/accounts/{account_id}/account_users",
    "method": "DELETE",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
        },
        "content-type": ""
      },
      {
        "status": "401",
        "body": {
        },
        "content-type": ""
      },
      {
        "status": "404",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/platform/api/v1/agent_bots",
    "method": "GET",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "type": "array",
          "description": "Array of agent bots",
          "items": {
            "$ref": "#/definitions/agent_bot"
          },
          "definitions": {
            "agent_bot": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "description": "ID of the agent bot"
                },
                "name": {
                  "type": "string",
                  "description": "The name of the agent bot"
                },
                "description": {
                  "type": "string",
                  "description": "The description about the agent bot"
                },
                "account_id": {
                  "type": "number",
                  "description": "Account ID if it's an account specific bot"
                },
                "outgoing_url": {
                  "type": "string",
                  "description": "The webhook URL for the bot"
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "401",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/platform/api/v1/agent_bots",
    "method": "POST",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "$ref": "#/definitions/agent_bot",
          "definitions": {
            "agent_bot": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "description": "ID of the agent bot"
                },
                "name": {
                  "type": "string",
                  "description": "The name of the agent bot"
                },
                "description": {
                  "type": "string",
                  "description": "The description about the agent bot"
                },
                "account_id": {
                  "type": "number",
                  "description": "Account ID if it's an account specific bot"
                },
                "outgoing_url": {
                  "type": "string",
                  "description": "The webhook URL for the bot"
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "401",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/platform/api/v1/agent_bots/{id}",
    "method": "GET",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "$ref": "#/definitions/agent_bot",
          "definitions": {
            "agent_bot": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "description": "ID of the agent bot"
                },
                "name": {
                  "type": "string",
                  "description": "The name of the agent bot"
                },
                "description": {
                  "type": "string",
                  "description": "The description about the agent bot"
                },
                "account_id": {
                  "type": "number",
                  "description": "Account ID if it's an account specific bot"
                },
                "outgoing_url": {
                  "type": "string",
                  "description": "The webhook URL for the bot"
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "401",
        "body": {
        },
        "content-type": ""
      },
      {
        "status": "404",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/platform/api/v1/agent_bots/{id}",
    "method": "PATCH",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "$ref": "#/definitions/agent_bot",
          "definitions": {
            "agent_bot": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "description": "ID of the agent bot"
                },
                "name": {
                  "type": "string",
                  "description": "The name of the agent bot"
                },
                "description": {
                  "type": "string",
                  "description": "The description about the agent bot"
                },
                "account_id": {
                  "type": "number",
                  "description": "Account ID if it's an account specific bot"
                },
                "outgoing_url": {
                  "type": "string",
                  "description": "The webhook URL for the bot"
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "401",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/platform/api/v1/agent_bots/{id}",
    "method": "DELETE",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
        },
        "content-type": ""
      },
      {
        "status": "401",
        "body": {
        },
        "content-type": ""
      },
      {
        "status": "404",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/platform/api/v1/users",
    "method": "POST",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "$ref": "#/definitions/user",
          "definitions": {
            "user": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number"
                },
                "uid": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "available_name": {
                  "type": "string"
                },
                "display_name": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "account_id": {
                  "type": "number"
                },
                "role": {
                  "type": "string",
                  "enum": [
                    "agent",
                    "administrator"
                  ]
                },
                "confirmed": {
                  "type": "boolean"
                },
                "custom_attributes": {
                  "type": "object",
                  "description": "Available for users who are created through platform APIs and has custom attributes associated."
                },
                "accounts": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/account"
                  }
                }
              }
            },
            "account": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "description": "Account ID"
                },
                "name": {
                  "type": "string",
                  "description": "Name of the account"
                },
                "role": {
                  "type": "string",
                  "enum": [
                    "administrator",
                    "agent"
                  ],
                  "description": "The user role in the account"
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "401",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/platform/api/v1/users/{id}",
    "method": "GET",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "$ref": "#/definitions/user",
          "definitions": {
            "user": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number"
                },
                "uid": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "available_name": {
                  "type": "string"
                },
                "display_name": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "account_id": {
                  "type": "number"
                },
                "role": {
                  "type": "string",
                  "enum": [
                    "agent",
                    "administrator"
                  ]
                },
                "confirmed": {
                  "type": "boolean"
                },
                "custom_attributes": {
                  "type": "object",
                  "description": "Available for users who are created through platform APIs and has custom attributes associated."
                },
                "accounts": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/account"
                  }
                }
              }
            },
            "account": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "description": "Account ID"
                },
                "name": {
                  "type": "string",
                  "description": "Name of the account"
                },
                "role": {
                  "type": "string",
                  "enum": [
                    "administrator",
                    "agent"
                  ],
                  "description": "The user role in the account"
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "401",
        "body": {
        },
        "content-type": ""
      },
      {
        "status": "404",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/platform/api/v1/users/{id}",
    "method": "PATCH",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "$ref": "#/definitions/user",
          "definitions": {
            "user": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number"
                },
                "uid": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "available_name": {
                  "type": "string"
                },
                "display_name": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "account_id": {
                  "type": "number"
                },
                "role": {
                  "type": "string",
                  "enum": [
                    "agent",
                    "administrator"
                  ]
                },
                "confirmed": {
                  "type": "boolean"
                },
                "custom_attributes": {
                  "type": "object",
                  "description": "Available for users who are created through platform APIs and has custom attributes associated."
                },
                "accounts": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/account"
                  }
                }
              }
            },
            "account": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "description": "Account ID"
                },
                "name": {
                  "type": "string",
                  "description": "Name of the account"
                },
                "role": {
                  "type": "string",
                  "enum": [
                    "administrator",
                    "agent"
                  ],
                  "description": "The user role in the account"
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "401",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/platform/api/v1/users/{id}",
    "method": "DELETE",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
        },
        "content-type": ""
      },
      {
        "status": "401",
        "body": {
        },
        "content-type": ""
      },
      {
        "status": "404",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/platform/api/v1/users/{id}/login",
    "method": "GET",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "SSO url to autenticate the user"
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "401",
        "body": {
        },
        "content-type": ""
      },
      {
        "status": "404",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/public/api/v1/inboxes/{inbox_identifier}",
    "method": "GET",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "$ref": "#/definitions/public_inbox",
          "definitions": {
            "public_inbox": {
              "type": "object",
              "properties": {
                "identifier": {
                  "type": "string",
                  "description": "Inbox identifier"
                },
                "name": {
                  "type": "string",
                  "description": "Name of the inbox"
                },
                "timezone": {
                  "type": "string",
                  "description": "The timezone defined on the inbox"
                },
                "working_hours": {
                  "type": "array",
                  "description": "The working hours defined on the inbox",
                  "items": {
                    "type": "object",
                    "properties": {
                      "day_of_week": {
                        "type": "integer",
                        "description": "Day of the week as a number. Sunday -> 0, Saturday -> 6"
                      },
                      "open_all_day": {
                        "type": "boolean",
                        "description": "Whether or not the business is open the whole day"
                      },
                      "closed_all_day": {
                        "type": "boolean",
                        "description": "Whether or not the business is closed the whole day"
                      },
                      "open_hour": {
                        "type": "integer",
                        "description": "Opening hour. Can be null if closed all day"
                      },
                      "open_minutes": {
                        "type": "integer",
                        "description": "Opening minute. Can be null if closed all day"
                      },
                      "close_hour": {
                        "type": "integer",
                        "description": "Closing hour. Can be null if closed all day"
                      },
                      "close_minutes": {
                        "type": "integer",
                        "description": "Closing minute. Can be null if closed all day"
                      }
                    }
                  }
                },
                "working_hours_enabled": {
                  "type": "boolean",
                  "description": "Whether of not the working hours are enabled on the inbox"
                },
                "csat_survey_enabled": {
                  "type": "boolean",
                  "description": "Whether of not the Customer Satisfaction survey is enabled on the inbox"
                },
                "greeting_enabled": {
                  "type": "boolean",
                  "description": "Whether of not the Greeting Message is enabled on the inbox"
                },
                "identity_validation_enabled": {
                  "type": "boolean",
                  "description": "Whether of not the User Identity Validation is enforced on the inbox"
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "401",
        "body": {
        },
        "content-type": ""
      },
      {
        "status": "404",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/public/api/v1/inboxes/{inbox_identifier}/contacts",
    "method": "POST",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "$ref": "#/definitions/public_contact",
          "definitions": {
            "public_contact": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Id of the contact"
                },
                "source_id": {
                  "type": "string",
                  "description": "The session identifier of the contact"
                },
                "name": {
                  "type": "string",
                  "description": "Name of the contact"
                },
                "email": {
                  "type": "string",
                  "description": "Email of the contact"
                },
                "pubsub_token": {
                  "type": "string",
                  "description": "The token to be used to connect to chatwoot websocket"
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "401",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/public/api/v1/inboxes/{inbox_identifier}/contacts/{contact_identifier}",
    "method": "GET",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "$ref": "#/definitions/public_contact",
          "definitions": {
            "public_contact": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Id of the contact"
                },
                "source_id": {
                  "type": "string",
                  "description": "The session identifier of the contact"
                },
                "name": {
                  "type": "string",
                  "description": "Name of the contact"
                },
                "email": {
                  "type": "string",
                  "description": "Email of the contact"
                },
                "pubsub_token": {
                  "type": "string",
                  "description": "The token to be used to connect to chatwoot websocket"
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "401",
        "body": {
        },
        "content-type": ""
      },
      {
        "status": "404",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/public/api/v1/inboxes/{inbox_identifier}/contacts/{contact_identifier}",
    "method": "PATCH",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "$ref": "#/definitions/public_contact",
          "definitions": {
            "public_contact": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Id of the contact"
                },
                "source_id": {
                  "type": "string",
                  "description": "The session identifier of the contact"
                },
                "name": {
                  "type": "string",
                  "description": "Name of the contact"
                },
                "email": {
                  "type": "string",
                  "description": "Email of the contact"
                },
                "pubsub_token": {
                  "type": "string",
                  "description": "The token to be used to connect to chatwoot websocket"
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "401",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/public/api/v1/inboxes/{inbox_identifier}/contacts/{contact_identifier}/conversations",
    "method": "POST",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "$ref": "#/definitions/public_conversation",
          "definitions": {
            "public_conversation": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Id of the conversation"
                },
                "inbox_id": {
                  "type": "string",
                  "description": "The inbox id of the conversation"
                },
                "messages": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/message"
                  },
                  "description": "Messages in the conversation"
                },
                "contact": {
                  "type": "object",
                  "description": "The contact information associated to the conversation"
                }
              }
            },
            "message": {
              "type": "object",
              "properties": {
                "content": {
                  "type": "string",
                  "description": "The text content of the message"
                },
                "content_type": {
                  "type": "string",
                  "enum": [
                    "text",
                    "input_select",
                    "cards",
                    "form"
                  ],
                  "description": "The type of the template message"
                },
                "content_attributes": {
                  "type": "object",
                  "description": "The content attributes for each content_type"
                },
                "message_type": {
                  "type": "string",
                  "enum": [
                    "incoming",
                    "outgoing",
                    "activity",
                    "template"
                  ],
                  "description": "The type of the message"
                },
                "created_at": {
                  "type": "integer",
                  "description": "The time at which message was created"
                },
                "private": {
                  "type": "boolean",
                  "description": "The flags which shows whether the message is private or not"
                },
                "attachment": {
                  "type": "object",
                  "description": "The file object attached to the image"
                },
                "sender": {
                  "type": "object",
                  "description": "User/Agent/AgentBot object"
                },
                "conversation_id": {
                  "type": "number",
                  "description": "ID of the conversation"
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "401",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/public/api/v1/inboxes/{inbox_identifier}/contacts/{contact_identifier}/conversations",
    "method": "GET",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "type": "array",
          "description": "Array of conversations",
          "items": {
            "$ref": "#/definitions/public_conversation"
          },
          "definitions": {
            "public_conversation": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Id of the conversation"
                },
                "inbox_id": {
                  "type": "string",
                  "description": "The inbox id of the conversation"
                },
                "messages": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/message"
                  },
                  "description": "Messages in the conversation"
                },
                "contact": {
                  "type": "object",
                  "description": "The contact information associated to the conversation"
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "401",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/public/api/v1/inboxes/{inbox_identifier}/contacts/{contact_identifier}/conversations/{conversation_id}/messages",
    "method": "POST",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "$ref": "#/definitions/public_message",
          "definitions": {
            "public_message": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Id of the message"
                },
                "content": {
                  "type": "string",
                  "description": "Text content of the message"
                },
                "message_type": {
                  "type": "string",
                  "description": "Denotes the message type"
                },
                "content_type": {
                  "type": "string",
                  "description": "Content type of the message"
                },
                "content_attributes": {
                  "type": "string",
                  "description": "Additional content attributes of the message"
                },
                "created_at": {
                  "type": "string",
                  "description": "Created at time stamp of the message"
                },
                "conversation_id": {
                  "type": "string",
                  "description": "Conversation Id of the message"
                },
                "attachments": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "description": "Attachments if any"
                },
                "sender": {
                  "type": "object",
                  "description": "Details of the sender"
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "401",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/public/api/v1/inboxes/{inbox_identifier}/contacts/{contact_identifier}/conversations/{conversation_id}/messages",
    "method": "GET",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "type": "array",
          "description": "Array of messages",
          "items": {
            "$ref": "#/definitions/public_message"
          },
          "definitions": {
            "public_message": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Id of the message"
                },
                "content": {
                  "type": "string",
                  "description": "Text content of the message"
                },
                "message_type": {
                  "type": "string",
                  "description": "Denotes the message type"
                },
                "content_type": {
                  "type": "string",
                  "description": "Content type of the message"
                },
                "content_attributes": {
                  "type": "string",
                  "description": "Additional content attributes of the message"
                },
                "created_at": {
                  "type": "string",
                  "description": "Created at time stamp of the message"
                },
                "conversation_id": {
                  "type": "string",
                  "description": "Conversation Id of the message"
                },
                "attachments": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "description": "Attachments if any"
                },
                "sender": {
                  "type": "object",
                  "description": "Details of the sender"
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "401",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/public/api/v1/inboxes/{inbox_identifier}/contacts/{contact_identifier}/conversations/{conversation_id}/messages/{message_id}",
    "method": "PATCH",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "$ref": "#/definitions/public_message",
          "definitions": {
            "public_message": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Id of the message"
                },
                "content": {
                  "type": "string",
                  "description": "Text content of the message"
                },
                "message_type": {
                  "type": "string",
                  "description": "Denotes the message type"
                },
                "content_type": {
                  "type": "string",
                  "description": "Content type of the message"
                },
                "content_attributes": {
                  "type": "string",
                  "description": "Additional content attributes of the message"
                },
                "created_at": {
                  "type": "string",
                  "description": "Created at time stamp of the message"
                },
                "conversation_id": {
                  "type": "string",
                  "description": "Conversation Id of the message"
                },
                "attachments": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "description": "Attachments if any"
                },
                "sender": {
                  "type": "object",
                  "description": "Details of the sender"
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "401",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/api/v1/accounts/{account_id}/agent_bots",
    "method": "GET",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "type": "array",
          "description": "Array of agent bots",
          "items": {
            "$ref": "#/definitions/agent_bot"
          },
          "definitions": {
            "agent_bot": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "description": "ID of the agent bot"
                },
                "name": {
                  "type": "string",
                  "description": "The name of the agent bot"
                },
                "description": {
                  "type": "string",
                  "description": "The description about the agent bot"
                },
                "account_id": {
                  "type": "number",
                  "description": "Account ID if it's an account specific bot"
                },
                "outgoing_url": {
                  "type": "string",
                  "description": "The webhook URL for the bot"
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "401",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/api/v1/accounts/{account_id}/agent_bots",
    "method": "POST",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "$ref": "#/definitions/agent_bot",
          "definitions": {
            "agent_bot": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "description": "ID of the agent bot"
                },
                "name": {
                  "type": "string",
                  "description": "The name of the agent bot"
                },
                "description": {
                  "type": "string",
                  "description": "The description about the agent bot"
                },
                "account_id": {
                  "type": "number",
                  "description": "Account ID if it's an account specific bot"
                },
                "outgoing_url": {
                  "type": "string",
                  "description": "The webhook URL for the bot"
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "401",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/api/v1/accounts/{account_id}/agent_bots/{id}",
    "method": "GET",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "$ref": "#/definitions/agent_bot",
          "definitions": {
            "agent_bot": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "description": "ID of the agent bot"
                },
                "name": {
                  "type": "string",
                  "description": "The name of the agent bot"
                },
                "description": {
                  "type": "string",
                  "description": "The description about the agent bot"
                },
                "account_id": {
                  "type": "number",
                  "description": "Account ID if it's an account specific bot"
                },
                "outgoing_url": {
                  "type": "string",
                  "description": "The webhook URL for the bot"
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "401",
        "body": {
        },
        "content-type": ""
      },
      {
        "status": "404",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/api/v1/accounts/{account_id}/agent_bots/{id}",
    "method": "PATCH",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "$ref": "#/definitions/agent_bot",
          "definitions": {
            "agent_bot": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "description": "ID of the agent bot"
                },
                "name": {
                  "type": "string",
                  "description": "The name of the agent bot"
                },
                "description": {
                  "type": "string",
                  "description": "The description about the agent bot"
                },
                "account_id": {
                  "type": "number",
                  "description": "Account ID if it's an account specific bot"
                },
                "outgoing_url": {
                  "type": "string",
                  "description": "The webhook URL for the bot"
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "401",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/api/v1/accounts/{account_id}/agent_bots/{id}",
    "method": "DELETE",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
        },
        "content-type": ""
      },
      {
        "status": "401",
        "body": {
        },
        "content-type": ""
      },
      {
        "status": "404",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/api/v1/accounts/{account_id}/agents",
    "method": "GET",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "type": "array",
          "description": "Array of all active agents",
          "items": {
            "$ref": "#/definitions/agent"
          },
          "definitions": {
            "agent": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "uid": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "available_name": {
                  "type": "string"
                },
                "display_name": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "account_id": {
                  "type": "integer"
                },
                "role": {
                  "type": "string",
                  "enum": [
                    "agent",
                    "administrator"
                  ]
                },
                "confirmed": {
                  "type": "boolean"
                },
                "availability_status": {
                  "type": "string",
                  "enum": [
                    "available",
                    "busy",
                    "offline"
                  ],
                  "description": "The availability status of the agent computed by Chatwoot."
                },
                "auto_offline": {
                  "type": "boolean",
                  "description": "Whether the availability status of agent is configured to go offline automatically when away."
                },
                "custom_attributes": {
                  "type": "object",
                  "description": "Available for users who are created through platform APIs and has custom attributes associated."
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "403",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/api/v1/accounts/{account_id}/agents",
    "method": "POST",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "$ref": "#/definitions/agent",
          "definitions": {
            "agent": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "uid": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "available_name": {
                  "type": "string"
                },
                "display_name": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "account_id": {
                  "type": "integer"
                },
                "role": {
                  "type": "string",
                  "enum": [
                    "agent",
                    "administrator"
                  ]
                },
                "confirmed": {
                  "type": "boolean"
                },
                "availability_status": {
                  "type": "string",
                  "enum": [
                    "available",
                    "busy",
                    "offline"
                  ],
                  "description": "The availability status of the agent computed by Chatwoot."
                },
                "auto_offline": {
                  "type": "boolean",
                  "description": "Whether the availability status of agent is configured to go offline automatically when away."
                },
                "custom_attributes": {
                  "type": "object",
                  "description": "Available for users who are created through platform APIs and has custom attributes associated."
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "403",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/api/v1/accounts/{account_id}/agents/{id}",
    "method": "PATCH",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "$ref": "#/definitions/agent",
          "definitions": {
            "agent": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "uid": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "available_name": {
                  "type": "string"
                },
                "display_name": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "account_id": {
                  "type": "integer"
                },
                "role": {
                  "type": "string",
                  "enum": [
                    "agent",
                    "administrator"
                  ]
                },
                "confirmed": {
                  "type": "boolean"
                },
                "availability_status": {
                  "type": "string",
                  "enum": [
                    "available",
                    "busy",
                    "offline"
                  ],
                  "description": "The availability status of the agent computed by Chatwoot."
                },
                "auto_offline": {
                  "type": "boolean",
                  "description": "Whether the availability status of agent is configured to go offline automatically when away."
                },
                "custom_attributes": {
                  "type": "object",
                  "description": "Available for users who are created through platform APIs and has custom attributes associated."
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "404",
        "body": {
        },
        "content-type": ""
      },
      {
        "status": "403",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/api/v1/accounts/{account_id}/agents/{id}",
    "method": "DELETE",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
        },
        "content-type": ""
      },
      {
        "status": "404",
        "body": {
        },
        "content-type": ""
      },
      {
        "status": "403",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/api/v1/accounts/{account_id}/canned_responses",
    "method": "GET",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "type": "array",
          "description": "Array of all canned responses",
          "items": {
            "$ref": "#/definitions/canned_response"
          },
          "definitions": {
            "canned_response": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "ID of the canned response"
                },
                "content": {
                  "type": "string",
                  "description": "Message content for canned response"
                },
                "short_code": {
                  "type": "string",
                  "description": "Short Code for quick access of the canned response"
                },
                "account_id": {
                  "type": "integer",
                  "description": "Account Id"
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "403",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/api/v1/accounts/{account_id}/canned_responses",
    "method": "POST",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "$ref": "#/definitions/canned_response",
          "definitions": {
            "canned_response": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "ID of the canned response"
                },
                "content": {
                  "type": "string",
                  "description": "Message content for canned response"
                },
                "short_code": {
                  "type": "string",
                  "description": "Short Code for quick access of the canned response"
                },
                "account_id": {
                  "type": "integer",
                  "description": "Account Id"
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "403",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/api/v1/accounts/{account_id}/canned_responses/{id}",
    "method": "PATCH",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "$ref": "#/definitions/canned_response",
          "definitions": {
            "canned_response": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "ID of the canned response"
                },
                "content": {
                  "type": "string",
                  "description": "Message content for canned response"
                },
                "short_code": {
                  "type": "string",
                  "description": "Short Code for quick access of the canned response"
                },
                "account_id": {
                  "type": "integer",
                  "description": "Account Id"
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "404",
        "body": {
        },
        "content-type": ""
      },
      {
        "status": "403",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/api/v1/accounts/{account_id}/canned_responses/{id}",
    "method": "DELETE",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
        },
        "content-type": ""
      },
      {
        "status": "404",
        "body": {
        },
        "content-type": ""
      },
      {
        "status": "403",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/api/v1/accounts/{account_id}/custom_attribute_definitions",
    "method": "GET",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "type": "array",
          "description": "Array of all custom attributes",
          "items": {
            "$ref": "#/definitions/custom_attribute"
          },
          "definitions": {
            "custom_attribute": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Identifier"
                },
                "attribute_display_name": {
                  "type": "string",
                  "description": "Attribute display name"
                },
                "attribute_display_type": {
                  "type": "string",
                  "description": "Attribute display type (text, number, currency, percent, link, date, list, checkbox)"
                },
                "attribute_description": {
                  "type": "string",
                  "description": "Attribute description"
                },
                "attribute_key": {
                  "type": "string",
                  "description": "Attribute unique key value"
                },
                "attribute_values": {
                  "type": "string",
                  "description": "Attribute values"
                },
                "default_value": {
                  "type": "string",
                  "description": "Attribute default value"
                },
                "attribute_model": {
                  "type": "string",
                  "description": "Attribute type(conversation_attribute/contact_attribute)"
                },
                "account_id": {
                  "type": "integer",
                  "description": "Account Id"
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "403",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/api/v1/accounts/{account_id}/custom_attribute_definitions",
    "method": "POST",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "$ref": "#/definitions/custom_attribute",
          "definitions": {
            "custom_attribute": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Identifier"
                },
                "attribute_display_name": {
                  "type": "string",
                  "description": "Attribute display name"
                },
                "attribute_display_type": {
                  "type": "string",
                  "description": "Attribute display type (text, number, currency, percent, link, date, list, checkbox)"
                },
                "attribute_description": {
                  "type": "string",
                  "description": "Attribute description"
                },
                "attribute_key": {
                  "type": "string",
                  "description": "Attribute unique key value"
                },
                "attribute_values": {
                  "type": "string",
                  "description": "Attribute values"
                },
                "default_value": {
                  "type": "string",
                  "description": "Attribute default value"
                },
                "attribute_model": {
                  "type": "string",
                  "description": "Attribute type(conversation_attribute/contact_attribute)"
                },
                "account_id": {
                  "type": "integer",
                  "description": "Account Id"
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "403",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/api/v1/accounts/{account_id}/custom_attribute_definitions/{id}",
    "method": "GET",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "$ref": "#/definitions/custom_attribute",
          "definitions": {
            "custom_attribute": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Identifier"
                },
                "attribute_display_name": {
                  "type": "string",
                  "description": "Attribute display name"
                },
                "attribute_display_type": {
                  "type": "string",
                  "description": "Attribute display type (text, number, currency, percent, link, date, list, checkbox)"
                },
                "attribute_description": {
                  "type": "string",
                  "description": "Attribute description"
                },
                "attribute_key": {
                  "type": "string",
                  "description": "Attribute unique key value"
                },
                "attribute_values": {
                  "type": "string",
                  "description": "Attribute values"
                },
                "default_value": {
                  "type": "string",
                  "description": "Attribute default value"
                },
                "attribute_model": {
                  "type": "string",
                  "description": "Attribute type(conversation_attribute/contact_attribute)"
                },
                "account_id": {
                  "type": "integer",
                  "description": "Account Id"
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "401",
        "body": {
        },
        "content-type": ""
      },
      {
        "status": "404",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/api/v1/accounts/{account_id}/custom_attribute_definitions/{id}",
    "method": "PATCH",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "$ref": "#/definitions/custom_attribute",
          "definitions": {
            "custom_attribute": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Identifier"
                },
                "attribute_display_name": {
                  "type": "string",
                  "description": "Attribute display name"
                },
                "attribute_display_type": {
                  "type": "string",
                  "description": "Attribute display type (text, number, currency, percent, link, date, list, checkbox)"
                },
                "attribute_description": {
                  "type": "string",
                  "description": "Attribute description"
                },
                "attribute_key": {
                  "type": "string",
                  "description": "Attribute unique key value"
                },
                "attribute_values": {
                  "type": "string",
                  "description": "Attribute values"
                },
                "default_value": {
                  "type": "string",
                  "description": "Attribute default value"
                },
                "attribute_model": {
                  "type": "string",
                  "description": "Attribute type(conversation_attribute/contact_attribute)"
                },
                "account_id": {
                  "type": "integer",
                  "description": "Account Id"
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "404",
        "body": {
        },
        "content-type": ""
      },
      {
        "status": "403",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/api/v1/accounts/{account_id}/custom_attribute_definitions/{id}",
    "method": "DELETE",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
        },
        "content-type": ""
      },
      {
        "status": "404",
        "body": {
        },
        "content-type": ""
      },
      {
        "status": "403",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/api/v1/accounts/{account_id}/contacts",
    "method": "GET",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "$ref": "#/definitions/contact_list",
          "definitions": {
            "contact_list": {
              "type": "array",
              "description": "array of contacts",
              "items": {
                "allOf": [
                  {
                    "$ref": "#/definitions/generic_id"
                  },
                  {
                    "$ref": "#/definitions/contact"
                  }
                ]
              }
            },
            "generic_id": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number"
                }
              }
            },
            "contact": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "description": "Email address of the contact"
                },
                "name": {
                  "type": "string",
                  "description": "The name of the contact"
                },
                "phone_number": {
                  "type": "string",
                  "description": "Phone number of the contact"
                },
                "thumbnail": {
                  "type": "string",
                  "description": "Avatar URL of the contact"
                },
                "additional_attributes": {
                  "type": "object",
                  "description": "The object containing additional attributes related to the contact"
                },
                "custom_attributes": {
                  "type": "object",
                  "description": "The object to save custom attributes for contact, accepts custom attributes key and value",
                  "example": {
                    "attribute_key": "attribute_value",
                    "signed_up_at": "dd/mm/yyyy"
                  }
                },
                "contact_inboxes": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/contact_inboxes"
                  }
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "400",
        "body": {
          "$ref": "#/definitions/bad_request_error",
          "definitions": {
            "bad_request_error": {
              "title": "data",
              "type": "object",
              "properties": {
                "description": {
                  "type": "string"
                },
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/request_error"
                  }
                }
              }
            },
            "request_error": {
              "type": "object",
              "properties": {
                "field": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "code": {
                  "type": "string"
                }
              }
            }
          }
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/api/v1/accounts/{account_id}/contacts",
    "method": "POST",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "$ref": "#/definitions/extended_contact",
          "definitions": {
            "extended_contact": {
              "allOf": [
                {
                  "$ref": "#/definitions/contact"
                },
                {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "number",
                      "description": "Id of the user"
                    },
                    "availability_status": {
                      "type": "string",
                      "enum": [
                        "online",
                        "offline"
                      ],
                      "description": "Availability status of the user"
                    }
                  }
                }
              ]
            },
            "contact": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "description": "Email address of the contact"
                },
                "name": {
                  "type": "string",
                  "description": "The name of the contact"
                },
                "phone_number": {
                  "type": "string",
                  "description": "Phone number of the contact"
                },
                "thumbnail": {
                  "type": "string",
                  "description": "Avatar URL of the contact"
                },
                "additional_attributes": {
                  "type": "object",
                  "description": "The object containing additional attributes related to the contact"
                },
                "custom_attributes": {
                  "type": "object",
                  "description": "The object to save custom attributes for contact, accepts custom attributes key and value",
                  "example": {
                    "attribute_key": "attribute_value",
                    "signed_up_at": "dd/mm/yyyy"
                  }
                },
                "contact_inboxes": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/contact_inboxes"
                  }
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "400",
        "body": {
          "$ref": "#/definitions/bad_request_error",
          "definitions": {
            "bad_request_error": {
              "title": "data",
              "type": "object",
              "properties": {
                "description": {
                  "type": "string"
                },
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/request_error"
                  }
                }
              }
            },
            "request_error": {
              "type": "object",
              "properties": {
                "field": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "code": {
                  "type": "string"
                }
              }
            }
          }
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/api/v1/accounts/{account_id}/contacts/{id}",
    "method": "GET",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "$ref": "#/definitions/extended_contact",
          "definitions": {
            "extended_contact": {
              "allOf": [
                {
                  "$ref": "#/definitions/contact"
                },
                {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "number",
                      "description": "Id of the user"
                    },
                    "availability_status": {
                      "type": "string",
                      "enum": [
                        "online",
                        "offline"
                      ],
                      "description": "Availability status of the user"
                    }
                  }
                }
              ]
            },
            "contact": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "description": "Email address of the contact"
                },
                "name": {
                  "type": "string",
                  "description": "The name of the contact"
                },
                "phone_number": {
                  "type": "string",
                  "description": "Phone number of the contact"
                },
                "thumbnail": {
                  "type": "string",
                  "description": "Avatar URL of the contact"
                },
                "additional_attributes": {
                  "type": "object",
                  "description": "The object containing additional attributes related to the contact"
                },
                "custom_attributes": {
                  "type": "object",
                  "description": "The object to save custom attributes for contact, accepts custom attributes key and value",
                  "example": {
                    "attribute_key": "attribute_value",
                    "signed_up_at": "dd/mm/yyyy"
                  }
                },
                "contact_inboxes": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/contact_inboxes"
                  }
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "404",
        "body": {
        },
        "content-type": ""
      },
      {
        "status": "403",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/api/v1/accounts/{account_id}/contacts/{id}",
    "method": "PUT",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "204",
        "body": {
          "$ref": "#/definitions/contact_base",
          "definitions": {
            "contact_base": {
              "allOf": [
                {
                  "$ref": "#/definitions/generic_id"
                },
                {
                  "$ref": "#/definitions/contact"
                }
              ]
            },
            "generic_id": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number"
                }
              }
            },
            "contact": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "description": "Email address of the contact"
                },
                "name": {
                  "type": "string",
                  "description": "The name of the contact"
                },
                "phone_number": {
                  "type": "string",
                  "description": "Phone number of the contact"
                },
                "thumbnail": {
                  "type": "string",
                  "description": "Avatar URL of the contact"
                },
                "additional_attributes": {
                  "type": "object",
                  "description": "The object containing additional attributes related to the contact"
                },
                "custom_attributes": {
                  "type": "object",
                  "description": "The object to save custom attributes for contact, accepts custom attributes key and value",
                  "example": {
                    "attribute_key": "attribute_value",
                    "signed_up_at": "dd/mm/yyyy"
                  }
                },
                "contact_inboxes": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/contact_inboxes"
                  }
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "404",
        "body": {
        },
        "content-type": ""
      },
      {
        "status": "403",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/api/v1/accounts/{account_id}/contacts/{id}",
    "method": "DELETE",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
        },
        "content-type": ""
      },
      {
        "status": "401",
        "body": {
        },
        "content-type": ""
      },
      {
        "status": "404",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/api/v1/accounts/{account_id}/contacts/{id}/conversations",
    "method": "GET",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "$ref": "#/definitions/contact_conversations",
          "definitions": {
            "contact_conversations": {
              "type": "array",
              "description": "array of conversations",
              "items": {
                "allOf": [
                  {
                    "$ref": "#/definitions/conversation"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "meta": {
                        "type": "object",
                        "properties": {
                          "sender": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "number",
                                "description": "ID fo the sender"
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the sender"
                              },
                              "thumbnail": {
                                "type": "string",
                                "description": "Avatar URL of the contact"
                              },
                              "channel": {
                                "type": "string",
                                "description": "Channel Type"
                              }
                            }
                          },
                          "assignee": {
                            "$ref": "#/definitions/user"
                          }
                        }
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "display_id": {
                        "type": "number"
                      }
                    }
                  }
                ]
              }
            },
            "conversation": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "description": "ID of the conversation"
                },
                "messages": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/message"
                  }
                },
                "account_id": {
                  "type": "number",
                  "description": "Account Id"
                },
                "inbox_id": {
                  "type": "number",
                  "description": "ID of the inbox"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "open",
                    "resolved",
                    "pending"
                  ],
                  "description": "The status of the conversation"
                },
                "timestamp": {
                  "type": "string",
                  "description": "The time at which conversation was created"
                },
                "contact_last_seen_at": {
                  "type": "string"
                },
                "agent_last_seen_at": {
                  "type": "string"
                },
                "unread_count": {
                  "type": "number",
                  "description": "The number of unread messages"
                },
                "additional_attributes": {
                  "type": "object",
                  "description": "The object containing additional attributes related to the conversation"
                },
                "custom_attributes": {
                  "type": "object",
                  "description": "The object to save custom attributes for conversation, accepts custom attributes key and value",
                  "example": {
                    "attribute_key": "attribute_value",
                    "priority_conversation_number": 3
                  }
                }
              }
            },
            "user": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number"
                },
                "uid": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "available_name": {
                  "type": "string"
                },
                "display_name": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "account_id": {
                  "type": "number"
                },
                "role": {
                  "type": "string",
                  "enum": [
                    "agent",
                    "administrator"
                  ]
                },
                "confirmed": {
                  "type": "boolean"
                },
                "custom_attributes": {
                  "type": "object",
                  "description": "Available for users who are created through platform APIs and has custom attributes associated."
                },
                "accounts": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/account"
                  }
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "404",
        "body": {
        },
        "content-type": ""
      },
      {
        "status": "403",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/api/v1/accounts/{account_id}/contacts/search",
    "method": "GET",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "type": "object",
          "properties": {
            "payload": {
              "$ref": "#/definitions/contact_list"
            }
          },
          "definitions": {
            "contact_list": {
              "type": "array",
              "description": "array of contacts",
              "items": {
                "allOf": [
                  {
                    "$ref": "#/definitions/generic_id"
                  },
                  {
                    "$ref": "#/definitions/contact"
                  }
                ]
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "401",
        "body": {
          "$ref": "#/definitions/bad_request_error",
          "definitions": {
            "bad_request_error": {
              "title": "data",
              "type": "object",
              "properties": {
                "description": {
                  "type": "string"
                },
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/request_error"
                  }
                }
              }
            },
            "request_error": {
              "type": "object",
              "properties": {
                "field": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "code": {
                  "type": "string"
                }
              }
            }
          }
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/api/v1/accounts/{account_id}/contacts/filter",
    "method": "POST",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "$ref": "#/definitions/contact_list",
          "definitions": {
            "contact_list": {
              "type": "array",
              "description": "array of contacts",
              "items": {
                "allOf": [
                  {
                    "$ref": "#/definitions/generic_id"
                  },
                  {
                    "$ref": "#/definitions/contact"
                  }
                ]
              }
            },
            "generic_id": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number"
                }
              }
            },
            "contact": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "description": "Email address of the contact"
                },
                "name": {
                  "type": "string",
                  "description": "The name of the contact"
                },
                "phone_number": {
                  "type": "string",
                  "description": "Phone number of the contact"
                },
                "thumbnail": {
                  "type": "string",
                  "description": "Avatar URL of the contact"
                },
                "additional_attributes": {
                  "type": "object",
                  "description": "The object containing additional attributes related to the contact"
                },
                "custom_attributes": {
                  "type": "object",
                  "description": "The object to save custom attributes for contact, accepts custom attributes key and value",
                  "example": {
                    "attribute_key": "attribute_value",
                    "signed_up_at": "dd/mm/yyyy"
                  }
                },
                "contact_inboxes": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/contact_inboxes"
                  }
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "400",
        "body": {
          "$ref": "#/definitions/bad_request_error",
          "definitions": {
            "bad_request_error": {
              "title": "data",
              "type": "object",
              "properties": {
                "description": {
                  "type": "string"
                },
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/request_error"
                  }
                }
              }
            },
            "request_error": {
              "type": "object",
              "properties": {
                "field": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "code": {
                  "type": "string"
                }
              }
            }
          }
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/api/v1/accounts/{account_id}/contacts/{id}/contact_inboxes",
    "method": "POST",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "$ref": "#/definitions/contact_inboxes",
          "definitions": {
            "contact_inboxes": {
              "type": "object",
              "properties": {
                "source_id": {
                  "type": "string",
                  "description": "Contact Inbox Source Id"
                },
                "inbox": {
                  "$ref": "#/definitions/inbox"
                }
              }
            },
            "inbox": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "description": "ID of the inbox"
                },
                "name": {
                  "type": "string",
                  "description": "The name of the inbox"
                },
                "website_url": {
                  "type": "string",
                  "description": "Website URL"
                },
                "channel_type": {
                  "type": "string",
                  "description": "The type of the inbox"
                },
                "avatar_url": {
                  "type": "string",
                  "description": "The avatar image of the inbox"
                },
                "widget_color": {
                  "type": "string",
                  "description": "Widget Color used for customization of the widget"
                },
                "website_token": {
                  "type": "string",
                  "description": "Website Token"
                },
                "enable_auto_assignment": {
                  "type": "boolean",
                  "description": "The flag which shows whether Auto Assignment is enabled or not"
                },
                "web_widget_script": {
                  "type": "string",
                  "description": "Script used to load the website widget"
                },
                "welcome_title": {
                  "type": "string",
                  "description": "Welcome title to be displayed on the widget"
                },
                "welcome_tagline": {
                  "type": "string",
                  "description": "Welcome tagline to be displayed on the widget"
                },
                "greeting_enabled": {
                  "type": "boolean",
                  "description": "The flag which shows whether greeting is enabled"
                },
                "greeting_message": {
                  "type": "string",
                  "description": "A greeting message when the user starts the conversation"
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "401",
        "body": {
          "$ref": "#/definitions/bad_request_error",
          "definitions": {
            "bad_request_error": {
              "title": "data",
              "type": "object",
              "properties": {
                "description": {
                  "type": "string"
                },
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/request_error"
                  }
                }
              }
            },
            "request_error": {
              "type": "object",
              "properties": {
                "field": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "code": {
                  "type": "string"
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "422",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/api/v1/accounts/{account_id}/contacts/{id}/contactable_inboxes",
    "method": "GET",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "$ref": "#/definitions/contactable_inboxes",
          "definitions": {
            "contactable_inboxes": {
              "type": "object",
              "properties": {
                "source_id": {
                  "type": "string",
                  "description": "Contact Inbox Source Id"
                },
                "inbox": {
                  "$ref": "#/definitions/inbox"
                }
              }
            },
            "inbox": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "description": "ID of the inbox"
                },
                "name": {
                  "type": "string",
                  "description": "The name of the inbox"
                },
                "website_url": {
                  "type": "string",
                  "description": "Website URL"
                },
                "channel_type": {
                  "type": "string",
                  "description": "The type of the inbox"
                },
                "avatar_url": {
                  "type": "string",
                  "description": "The avatar image of the inbox"
                },
                "widget_color": {
                  "type": "string",
                  "description": "Widget Color used for customization of the widget"
                },
                "website_token": {
                  "type": "string",
                  "description": "Website Token"
                },
                "enable_auto_assignment": {
                  "type": "boolean",
                  "description": "The flag which shows whether Auto Assignment is enabled or not"
                },
                "web_widget_script": {
                  "type": "string",
                  "description": "Script used to load the website widget"
                },
                "welcome_title": {
                  "type": "string",
                  "description": "Welcome title to be displayed on the widget"
                },
                "welcome_tagline": {
                  "type": "string",
                  "description": "Welcome tagline to be displayed on the widget"
                },
                "greeting_enabled": {
                  "type": "boolean",
                  "description": "The flag which shows whether greeting is enabled"
                },
                "greeting_message": {
                  "type": "string",
                  "description": "A greeting message when the user starts the conversation"
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "401",
        "body": {
          "$ref": "#/definitions/bad_request_error",
          "definitions": {
            "bad_request_error": {
              "title": "data",
              "type": "object",
              "properties": {
                "description": {
                  "type": "string"
                },
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/request_error"
                  }
                }
              }
            },
            "request_error": {
              "type": "object",
              "properties": {
                "field": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "code": {
                  "type": "string"
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "422",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/api/v1/accounts/{account_id}/automation_rules",
    "method": "GET",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "type": "array",
          "description": "Array of all automation rules",
          "items": {
            "$ref": "#/definitions/automation_rule"
          },
          "definitions": {
            "automation_rule": {
              "type": "object",
              "properties": {
                "event_name": {
                  "type": "string",
                  "description": "Automation Rule event, on which we call the actions(conversation_created, conversation_updated, message_created)",
                  "enum": [
                    "conversation_created",
                    "conversation_updated",
                    "message_created"
                  ],
                  "example": "message_created"
                },
                "name": {
                  "type": "string",
                  "description": "The name of the rule",
                  "example": "Add label on message create event"
                },
                "description": {
                  "type": "string",
                  "description": "Description to give more context about the rule",
                  "example": "Add label support and sales on message create event if incoming message content contains text help"
                },
                "active": {
                  "type": "boolean",
                  "description": "Enable/disable automation rule"
                },
                "actions": {
                  "type": "array",
                  "description": "Array of actions which we perform when condition matches",
                  "items": {
                    "type": "object",
                    "example": {
                      "action_name": "add_label",
                      "action_params": [
                        "support",
                        "sales"
                      ]
                    }
                  }
                },
                "conditions": {
                  "type": "array",
                  "description": "Array of conditions on which conversation/message filter would work",
                  "items": {
                    "type": "object",
                    "example": {
                      "attribute_key": "content",
                      "filter_operator": "contains",
                      "values": [
                        "help"
                      ],
                      "query_operator": "nil"
                    }
                  }
                },
                "account_id": {
                  "type": "integer",
                  "description": "Account Id"
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "403",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/api/v1/accounts/{account_id}/automation_rules",
    "method": "POST",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "$ref": "#/definitions/automation_rule",
          "definitions": {
            "automation_rule": {
              "type": "object",
              "properties": {
                "event_name": {
                  "type": "string",
                  "description": "Automation Rule event, on which we call the actions(conversation_created, conversation_updated, message_created)",
                  "enum": [
                    "conversation_created",
                    "conversation_updated",
                    "message_created"
                  ],
                  "example": "message_created"
                },
                "name": {
                  "type": "string",
                  "description": "The name of the rule",
                  "example": "Add label on message create event"
                },
                "description": {
                  "type": "string",
                  "description": "Description to give more context about the rule",
                  "example": "Add label support and sales on message create event if incoming message content contains text help"
                },
                "active": {
                  "type": "boolean",
                  "description": "Enable/disable automation rule"
                },
                "actions": {
                  "type": "array",
                  "description": "Array of actions which we perform when condition matches",
                  "items": {
                    "type": "object",
                    "example": {
                      "action_name": "add_label",
                      "action_params": [
                        "support",
                        "sales"
                      ]
                    }
                  }
                },
                "conditions": {
                  "type": "array",
                  "description": "Array of conditions on which conversation/message filter would work",
                  "items": {
                    "type": "object",
                    "example": {
                      "attribute_key": "content",
                      "filter_operator": "contains",
                      "values": [
                        "help"
                      ],
                      "query_operator": "nil"
                    }
                  }
                },
                "account_id": {
                  "type": "integer",
                  "description": "Account Id"
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "403",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/api/v1/accounts/{account_id}/automation_rules/{id}",
    "method": "GET",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "$ref": "#/definitions/automation_rule",
          "definitions": {
            "automation_rule": {
              "type": "object",
              "properties": {
                "event_name": {
                  "type": "string",
                  "description": "Automation Rule event, on which we call the actions(conversation_created, conversation_updated, message_created)",
                  "enum": [
                    "conversation_created",
                    "conversation_updated",
                    "message_created"
                  ],
                  "example": "message_created"
                },
                "name": {
                  "type": "string",
                  "description": "The name of the rule",
                  "example": "Add label on message create event"
                },
                "description": {
                  "type": "string",
                  "description": "Description to give more context about the rule",
                  "example": "Add label support and sales on message create event if incoming message content contains text help"
                },
                "active": {
                  "type": "boolean",
                  "description": "Enable/disable automation rule"
                },
                "actions": {
                  "type": "array",
                  "description": "Array of actions which we perform when condition matches",
                  "items": {
                    "type": "object",
                    "example": {
                      "action_name": "add_label",
                      "action_params": [
                        "support",
                        "sales"
                      ]
                    }
                  }
                },
                "conditions": {
                  "type": "array",
                  "description": "Array of conditions on which conversation/message filter would work",
                  "items": {
                    "type": "object",
                    "example": {
                      "attribute_key": "content",
                      "filter_operator": "contains",
                      "values": [
                        "help"
                      ],
                      "query_operator": "nil"
                    }
                  }
                },
                "account_id": {
                  "type": "integer",
                  "description": "Account Id"
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "401",
        "body": {
        },
        "content-type": ""
      },
      {
        "status": "404",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/api/v1/accounts/{account_id}/automation_rules/{id}",
    "method": "PATCH",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "$ref": "#/definitions/automation_rule",
          "definitions": {
            "automation_rule": {
              "type": "object",
              "properties": {
                "event_name": {
                  "type": "string",
                  "description": "Automation Rule event, on which we call the actions(conversation_created, conversation_updated, message_created)",
                  "enum": [
                    "conversation_created",
                    "conversation_updated",
                    "message_created"
                  ],
                  "example": "message_created"
                },
                "name": {
                  "type": "string",
                  "description": "The name of the rule",
                  "example": "Add label on message create event"
                },
                "description": {
                  "type": "string",
                  "description": "Description to give more context about the rule",
                  "example": "Add label support and sales on message create event if incoming message content contains text help"
                },
                "active": {
                  "type": "boolean",
                  "description": "Enable/disable automation rule"
                },
                "actions": {
                  "type": "array",
                  "description": "Array of actions which we perform when condition matches",
                  "items": {
                    "type": "object",
                    "example": {
                      "action_name": "add_label",
                      "action_params": [
                        "support",
                        "sales"
                      ]
                    }
                  }
                },
                "conditions": {
                  "type": "array",
                  "description": "Array of conditions on which conversation/message filter would work",
                  "items": {
                    "type": "object",
                    "example": {
                      "attribute_key": "content",
                      "filter_operator": "contains",
                      "values": [
                        "help"
                      ],
                      "query_operator": "nil"
                    }
                  }
                },
                "account_id": {
                  "type": "integer",
                  "description": "Account Id"
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "403",
        "body": {
        },
        "content-type": ""
      },
      {
        "status": "404",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/api/v1/accounts/{account_id}/automation_rules/{id}",
    "method": "DELETE",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
        },
        "content-type": ""
      },
      {
        "status": "403",
        "body": {
        },
        "content-type": ""
      },
      {
        "status": "404",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/api/v1/accounts/{account_id}/conversations/meta",
    "method": "GET",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "type": "object",
          "properties": {
            "meta": {
              "type": "object",
              "properties": {
                "mine_count": {
                  "type": "number"
                },
                "unassigned_count": {
                  "type": "number"
                },
                "assigned_count": {
                  "type": "number"
                },
                "all_count": {
                  "type": "number"
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "400",
        "body": {
          "$ref": "#/definitions/bad_request_error",
          "definitions": {
            "bad_request_error": {
              "title": "data",
              "type": "object",
              "properties": {
                "description": {
                  "type": "string"
                },
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/request_error"
                  }
                }
              }
            },
            "request_error": {
              "type": "object",
              "properties": {
                "field": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "code": {
                  "type": "string"
                }
              }
            }
          }
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/api/v1/accounts/{account_id}/conversations",
    "method": "GET",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "$ref": "#/definitions/conversation_list",
          "definitions": {
            "conversation_list": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "type": "object",
                      "properties": {
                        "mine_count": {
                          "type": "number"
                        },
                        "unassigned_count": {
                          "type": "number"
                        },
                        "assigned_count": {
                          "type": "number"
                        },
                        "all_count": {
                          "type": "number"
                        }
                      }
                    },
                    "payload": {
                      "type": "array",
                      "description": "array of conversations",
                      "items": {
                        "allOf": [
                          {
                            "$ref": "#/definitions/generic_id"
                          },
                          {
                            "$ref": "#/definitions/conversation"
                          },
                          {
                            "type": "object",
                            "properties": {
                              "meta": {
                                "type": "object",
                                "properties": {
                                  "sender": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "number",
                                        "description": "ID fo the sender"
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "The name of the sender"
                                      },
                                      "thumbnail": {
                                        "type": "string",
                                        "description": "Avatar URL of the contact"
                                      },
                                      "channel": {
                                        "type": "string",
                                        "description": "Channel Type"
                                      }
                                    }
                                  },
                                  "assignee": {
                                    "$ref": "#/definitions/user"
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "generic_id": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number"
                }
              }
            },
            "conversation": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "description": "ID of the conversation"
                },
                "messages": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/message"
                  }
                },
                "account_id": {
                  "type": "number",
                  "description": "Account Id"
                },
                "inbox_id": {
                  "type": "number",
                  "description": "ID of the inbox"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "open",
                    "resolved",
                    "pending"
                  ],
                  "description": "The status of the conversation"
                },
                "timestamp": {
                  "type": "string",
                  "description": "The time at which conversation was created"
                },
                "contact_last_seen_at": {
                  "type": "string"
                },
                "agent_last_seen_at": {
                  "type": "string"
                },
                "unread_count": {
                  "type": "number",
                  "description": "The number of unread messages"
                },
                "additional_attributes": {
                  "type": "object",
                  "description": "The object containing additional attributes related to the conversation"
                },
                "custom_attributes": {
                  "type": "object",
                  "description": "The object to save custom attributes for conversation, accepts custom attributes key and value",
                  "example": {
                    "attribute_key": "attribute_value",
                    "priority_conversation_number": 3
                  }
                }
              }
            },
            "user": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number"
                },
                "uid": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "available_name": {
                  "type": "string"
                },
                "display_name": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "account_id": {
                  "type": "number"
                },
                "role": {
                  "type": "string",
                  "enum": [
                    "agent",
                    "administrator"
                  ]
                },
                "confirmed": {
                  "type": "boolean"
                },
                "custom_attributes": {
                  "type": "object",
                  "description": "Available for users who are created through platform APIs and has custom attributes associated."
                },
                "accounts": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/account"
                  }
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "400",
        "body": {
          "$ref": "#/definitions/bad_request_error",
          "definitions": {
            "bad_request_error": {
              "title": "data",
              "type": "object",
              "properties": {
                "description": {
                  "type": "string"
                },
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/request_error"
                  }
                }
              }
            },
            "request_error": {
              "type": "object",
              "properties": {
                "field": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "code": {
                  "type": "string"
                }
              }
            }
          }
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/api/v1/accounts/{account_id}/conversations",
    "method": "POST",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "type": "object",
          "properties": {
            "id": {
              "type": "number",
              "description": "ID of the conversation"
            },
            "account_id": {
              "type": "number",
              "description": "Account Id"
            },
            "inbox_id": {
              "type": "number",
              "description": "ID of the inbox"
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "403",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/api/v1/accounts/{account_id}/conversations/filter",
    "method": "POST",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "$ref": "#/definitions/conversation_list",
          "definitions": {
            "conversation_list": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "type": "object",
                      "properties": {
                        "mine_count": {
                          "type": "number"
                        },
                        "unassigned_count": {
                          "type": "number"
                        },
                        "assigned_count": {
                          "type": "number"
                        },
                        "all_count": {
                          "type": "number"
                        }
                      }
                    },
                    "payload": {
                      "type": "array",
                      "description": "array of conversations",
                      "items": {
                        "allOf": [
                          {
                            "$ref": "#/definitions/generic_id"
                          },
                          {
                            "$ref": "#/definitions/conversation"
                          },
                          {
                            "type": "object",
                            "properties": {
                              "meta": {
                                "type": "object",
                                "properties": {
                                  "sender": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "number",
                                        "description": "ID fo the sender"
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "The name of the sender"
                                      },
                                      "thumbnail": {
                                        "type": "string",
                                        "description": "Avatar URL of the contact"
                                      },
                                      "channel": {
                                        "type": "string",
                                        "description": "Channel Type"
                                      }
                                    }
                                  },
                                  "assignee": {
                                    "$ref": "#/definitions/user"
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "generic_id": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number"
                }
              }
            },
            "conversation": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "description": "ID of the conversation"
                },
                "messages": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/message"
                  }
                },
                "account_id": {
                  "type": "number",
                  "description": "Account Id"
                },
                "inbox_id": {
                  "type": "number",
                  "description": "ID of the inbox"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "open",
                    "resolved",
                    "pending"
                  ],
                  "description": "The status of the conversation"
                },
                "timestamp": {
                  "type": "string",
                  "description": "The time at which conversation was created"
                },
                "contact_last_seen_at": {
                  "type": "string"
                },
                "agent_last_seen_at": {
                  "type": "string"
                },
                "unread_count": {
                  "type": "number",
                  "description": "The number of unread messages"
                },
                "additional_attributes": {
                  "type": "object",
                  "description": "The object containing additional attributes related to the conversation"
                },
                "custom_attributes": {
                  "type": "object",
                  "description": "The object to save custom attributes for conversation, accepts custom attributes key and value",
                  "example": {
                    "attribute_key": "attribute_value",
                    "priority_conversation_number": 3
                  }
                }
              }
            },
            "user": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number"
                },
                "uid": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "available_name": {
                  "type": "string"
                },
                "display_name": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "account_id": {
                  "type": "number"
                },
                "role": {
                  "type": "string",
                  "enum": [
                    "agent",
                    "administrator"
                  ]
                },
                "confirmed": {
                  "type": "boolean"
                },
                "custom_attributes": {
                  "type": "object",
                  "description": "Available for users who are created through platform APIs and has custom attributes associated."
                },
                "accounts": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/account"
                  }
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "400",
        "body": {
          "$ref": "#/definitions/bad_request_error",
          "definitions": {
            "bad_request_error": {
              "title": "data",
              "type": "object",
              "properties": {
                "description": {
                  "type": "string"
                },
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/request_error"
                  }
                }
              }
            },
            "request_error": {
              "type": "object",
              "properties": {
                "field": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "code": {
                  "type": "string"
                }
              }
            }
          }
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/api/v1/accounts/{account_id}/conversations/{conversation_id}",
    "method": "GET",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "$ref": "#/definitions/conversation_show",
          "definitions": {
            "conversation_show": {
              "type": "object",
              "allOf": [
                {
                  "$ref": "#/definitions/generic_id"
                },
                {
                  "$ref": "#/definitions/conversation"
                },
                {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "type": "object",
                      "properties": {
                        "sender": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "number",
                              "description": "ID fo the sender"
                            },
                            "name": {
                              "type": "string",
                              "description": "The name of the sender"
                            },
                            "thumbnail": {
                              "type": "string",
                              "description": "Avatar URL of the contact"
                            },
                            "channel": {
                              "type": "string",
                              "description": "Channel Type"
                            }
                          }
                        },
                        "assignee": {
                          "$ref": "#/definitions/user"
                        }
                      }
                    }
                  }
                }
              ]
            },
            "generic_id": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number"
                }
              }
            },
            "conversation": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "description": "ID of the conversation"
                },
                "messages": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/message"
                  }
                },
                "account_id": {
                  "type": "number",
                  "description": "Account Id"
                },
                "inbox_id": {
                  "type": "number",
                  "description": "ID of the inbox"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "open",
                    "resolved",
                    "pending"
                  ],
                  "description": "The status of the conversation"
                },
                "timestamp": {
                  "type": "string",
                  "description": "The time at which conversation was created"
                },
                "contact_last_seen_at": {
                  "type": "string"
                },
                "agent_last_seen_at": {
                  "type": "string"
                },
                "unread_count": {
                  "type": "number",
                  "description": "The number of unread messages"
                },
                "additional_attributes": {
                  "type": "object",
                  "description": "The object containing additional attributes related to the conversation"
                },
                "custom_attributes": {
                  "type": "object",
                  "description": "The object to save custom attributes for conversation, accepts custom attributes key and value",
                  "example": {
                    "attribute_key": "attribute_value",
                    "priority_conversation_number": 3
                  }
                }
              }
            },
            "user": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number"
                },
                "uid": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "available_name": {
                  "type": "string"
                },
                "display_name": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "account_id": {
                  "type": "number"
                },
                "role": {
                  "type": "string",
                  "enum": [
                    "agent",
                    "administrator"
                  ]
                },
                "confirmed": {
                  "type": "boolean"
                },
                "custom_attributes": {
                  "type": "object",
                  "description": "Available for users who are created through platform APIs and has custom attributes associated."
                },
                "accounts": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/account"
                  }
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "404",
        "body": {
        },
        "content-type": ""
      },
      {
        "status": "403",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/api/v1/accounts/{account_id}/conversations/{conversation_id}/toggle_status",
    "method": "POST",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "$ref": "#/definitions/conversation_status_toggle",
          "definitions": {
            "conversation_status_toggle": {
              "type": "object",
              "properties": {
                "meta": {
                  "type": "object"
                },
                "payload": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "current_status": {
                      "type": "string",
                      "enum": [
                        "open",
                        "resolved"
                      ]
                    },
                    "conversation_id": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "404",
        "body": {
        },
        "content-type": ""
      },
      {
        "status": "401",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/api/v1/accounts/{account_id}/conversations/{conversation_id}/assignments",
    "method": "POST",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "$ref": "#/definitions/user",
          "definitions": {
            "user": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number"
                },
                "uid": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "available_name": {
                  "type": "string"
                },
                "display_name": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "account_id": {
                  "type": "number"
                },
                "role": {
                  "type": "string",
                  "enum": [
                    "agent",
                    "administrator"
                  ]
                },
                "confirmed": {
                  "type": "boolean"
                },
                "custom_attributes": {
                  "type": "object",
                  "description": "Available for users who are created through platform APIs and has custom attributes associated."
                },
                "accounts": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/account"
                  }
                }
              }
            },
            "account": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "description": "Account ID"
                },
                "name": {
                  "type": "string",
                  "description": "Name of the account"
                },
                "role": {
                  "type": "string",
                  "enum": [
                    "administrator",
                    "agent"
                  ],
                  "description": "The user role in the account"
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "404",
        "body": {
        },
        "content-type": ""
      },
      {
        "status": "401",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/api/v1/accounts/{account_id}/conversations/{conversation_id}/labels",
    "method": "GET",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "$ref": "#/definitions/conversation_labels",
          "definitions": {
            "conversation_labels": {
              "type": "object",
              "properties": {
                "payload": {
                  "type": "array",
                  "description": "Array of labels",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "404",
        "body": {
        },
        "content-type": ""
      },
      {
        "status": "401",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/api/v1/accounts/{account_id}/conversations/{conversation_id}/labels",
    "method": "POST",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "$ref": "#/definitions/conversation_labels",
          "definitions": {
            "conversation_labels": {
              "type": "object",
              "properties": {
                "payload": {
                  "type": "array",
                  "description": "Array of labels",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "404",
        "body": {
        },
        "content-type": ""
      },
      {
        "status": "401",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/api/v1/accounts/{account_id}/inboxes",
    "method": "GET",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "type": "array",
          "description": "Array of inboxes",
          "items": {
            "$ref": "#/definitions/inbox"
          },
          "definitions": {
            "inbox": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "description": "ID of the inbox"
                },
                "name": {
                  "type": "string",
                  "description": "The name of the inbox"
                },
                "website_url": {
                  "type": "string",
                  "description": "Website URL"
                },
                "channel_type": {
                  "type": "string",
                  "description": "The type of the inbox"
                },
                "avatar_url": {
                  "type": "string",
                  "description": "The avatar image of the inbox"
                },
                "widget_color": {
                  "type": "string",
                  "description": "Widget Color used for customization of the widget"
                },
                "website_token": {
                  "type": "string",
                  "description": "Website Token"
                },
                "enable_auto_assignment": {
                  "type": "boolean",
                  "description": "The flag which shows whether Auto Assignment is enabled or not"
                },
                "web_widget_script": {
                  "type": "string",
                  "description": "Script used to load the website widget"
                },
                "welcome_title": {
                  "type": "string",
                  "description": "Welcome title to be displayed on the widget"
                },
                "welcome_tagline": {
                  "type": "string",
                  "description": "Welcome tagline to be displayed on the widget"
                },
                "greeting_enabled": {
                  "type": "boolean",
                  "description": "The flag which shows whether greeting is enabled"
                },
                "greeting_message": {
                  "type": "string",
                  "description": "A greeting message when the user starts the conversation"
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "404",
        "body": {
        },
        "content-type": ""
      },
      {
        "status": "403",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/api/v1/accounts/{account_id}/inboxes/{id}",
    "method": "GET",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "$ref": "#/definitions/inbox",
          "definitions": {
            "inbox": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "description": "ID of the inbox"
                },
                "name": {
                  "type": "string",
                  "description": "The name of the inbox"
                },
                "website_url": {
                  "type": "string",
                  "description": "Website URL"
                },
                "channel_type": {
                  "type": "string",
                  "description": "The type of the inbox"
                },
                "avatar_url": {
                  "type": "string",
                  "description": "The avatar image of the inbox"
                },
                "widget_color": {
                  "type": "string",
                  "description": "Widget Color used for customization of the widget"
                },
                "website_token": {
                  "type": "string",
                  "description": "Website Token"
                },
                "enable_auto_assignment": {
                  "type": "boolean",
                  "description": "The flag which shows whether Auto Assignment is enabled or not"
                },
                "web_widget_script": {
                  "type": "string",
                  "description": "Script used to load the website widget"
                },
                "welcome_title": {
                  "type": "string",
                  "description": "Welcome title to be displayed on the widget"
                },
                "welcome_tagline": {
                  "type": "string",
                  "description": "Welcome tagline to be displayed on the widget"
                },
                "greeting_enabled": {
                  "type": "boolean",
                  "description": "The flag which shows whether greeting is enabled"
                },
                "greeting_message": {
                  "type": "string",
                  "description": "A greeting message when the user starts the conversation"
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "404",
        "body": {
        },
        "content-type": ""
      },
      {
        "status": "403",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/api/v1/accounts/{account_id}/inboxes",
    "method": "POST",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "$ref": "#/definitions/inbox",
          "definitions": {
            "inbox": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "description": "ID of the inbox"
                },
                "name": {
                  "type": "string",
                  "description": "The name of the inbox"
                },
                "website_url": {
                  "type": "string",
                  "description": "Website URL"
                },
                "channel_type": {
                  "type": "string",
                  "description": "The type of the inbox"
                },
                "avatar_url": {
                  "type": "string",
                  "description": "The avatar image of the inbox"
                },
                "widget_color": {
                  "type": "string",
                  "description": "Widget Color used for customization of the widget"
                },
                "website_token": {
                  "type": "string",
                  "description": "Website Token"
                },
                "enable_auto_assignment": {
                  "type": "boolean",
                  "description": "The flag which shows whether Auto Assignment is enabled or not"
                },
                "web_widget_script": {
                  "type": "string",
                  "description": "Script used to load the website widget"
                },
                "welcome_title": {
                  "type": "string",
                  "description": "Welcome title to be displayed on the widget"
                },
                "welcome_tagline": {
                  "type": "string",
                  "description": "Welcome tagline to be displayed on the widget"
                },
                "greeting_enabled": {
                  "type": "boolean",
                  "description": "The flag which shows whether greeting is enabled"
                },
                "greeting_message": {
                  "type": "string",
                  "description": "A greeting message when the user starts the conversation"
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "404",
        "body": {
        },
        "content-type": ""
      },
      {
        "status": "403",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/api/v1/accounts/{account_id}/inboxes/{id}",
    "method": "PATCH",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "$ref": "#/definitions/inbox",
          "definitions": {
            "inbox": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "description": "ID of the inbox"
                },
                "name": {
                  "type": "string",
                  "description": "The name of the inbox"
                },
                "website_url": {
                  "type": "string",
                  "description": "Website URL"
                },
                "channel_type": {
                  "type": "string",
                  "description": "The type of the inbox"
                },
                "avatar_url": {
                  "type": "string",
                  "description": "The avatar image of the inbox"
                },
                "widget_color": {
                  "type": "string",
                  "description": "Widget Color used for customization of the widget"
                },
                "website_token": {
                  "type": "string",
                  "description": "Website Token"
                },
                "enable_auto_assignment": {
                  "type": "boolean",
                  "description": "The flag which shows whether Auto Assignment is enabled or not"
                },
                "web_widget_script": {
                  "type": "string",
                  "description": "Script used to load the website widget"
                },
                "welcome_title": {
                  "type": "string",
                  "description": "Welcome title to be displayed on the widget"
                },
                "welcome_tagline": {
                  "type": "string",
                  "description": "Welcome tagline to be displayed on the widget"
                },
                "greeting_enabled": {
                  "type": "boolean",
                  "description": "The flag which shows whether greeting is enabled"
                },
                "greeting_message": {
                  "type": "string",
                  "description": "A greeting message when the user starts the conversation"
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "404",
        "body": {
        },
        "content-type": ""
      },
      {
        "status": "403",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/api/v1/accounts/{account_id}/inboxes/{id}/agent_bot",
    "method": "GET",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "204",
        "body": {
          "$ref": "#/definitions/agent_bot",
          "definitions": {
            "agent_bot": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "description": "ID of the agent bot"
                },
                "name": {
                  "type": "string",
                  "description": "The name of the agent bot"
                },
                "description": {
                  "type": "string",
                  "description": "The description about the agent bot"
                },
                "account_id": {
                  "type": "number",
                  "description": "Account ID if it's an account specific bot"
                },
                "outgoing_url": {
                  "type": "string",
                  "description": "The webhook URL for the bot"
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "404",
        "body": {
        },
        "content-type": ""
      },
      {
        "status": "403",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/api/v1/accounts/{account_id}/inboxes/{id}/set_agent_bot",
    "method": "POST",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "204",
        "body": {
        },
        "content-type": ""
      },
      {
        "status": "404",
        "body": {
        },
        "content-type": ""
      },
      {
        "status": "403",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/api/v1/accounts/{account_id}/inbox_members/{inbox_id}",
    "method": "GET",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "type": "array",
          "description": "Array of all active agents",
          "items": {
            "$ref": "#/definitions/agent"
          },
          "definitions": {
            "agent": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "uid": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "available_name": {
                  "type": "string"
                },
                "display_name": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "account_id": {
                  "type": "integer"
                },
                "role": {
                  "type": "string",
                  "enum": [
                    "agent",
                    "administrator"
                  ]
                },
                "confirmed": {
                  "type": "boolean"
                },
                "availability_status": {
                  "type": "string",
                  "enum": [
                    "available",
                    "busy",
                    "offline"
                  ],
                  "description": "The availability status of the agent computed by Chatwoot."
                },
                "auto_offline": {
                  "type": "boolean",
                  "description": "Whether the availability status of agent is configured to go offline automatically when away."
                },
                "custom_attributes": {
                  "type": "object",
                  "description": "Available for users who are created through platform APIs and has custom attributes associated."
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "404",
        "body": {
        },
        "content-type": ""
      },
      {
        "status": "403",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/api/v1/accounts/{account_id}/inbox_members/{inbox_id}",
    "method": "DELETE",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
        },
        "content-type": ""
      },
      {
        "status": "404",
        "body": {
        },
        "content-type": ""
      },
      {
        "status": "403",
        "body": {
        },
        "content-type": ""
      },
      {
        "status": "422",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/api/v1/accounts/{account_id}/inbox_members",
    "method": "POST",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "type": "array",
          "description": "Array of all active agents",
          "items": {
            "$ref": "#/definitions/agent"
          },
          "definitions": {
            "agent": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "uid": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "available_name": {
                  "type": "string"
                },
                "display_name": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "account_id": {
                  "type": "integer"
                },
                "role": {
                  "type": "string",
                  "enum": [
                    "agent",
                    "administrator"
                  ]
                },
                "confirmed": {
                  "type": "boolean"
                },
                "availability_status": {
                  "type": "string",
                  "enum": [
                    "available",
                    "busy",
                    "offline"
                  ],
                  "description": "The availability status of the agent computed by Chatwoot."
                },
                "auto_offline": {
                  "type": "boolean",
                  "description": "Whether the availability status of agent is configured to go offline automatically when away."
                },
                "custom_attributes": {
                  "type": "object",
                  "description": "Available for users who are created through platform APIs and has custom attributes associated."
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "404",
        "body": {
        },
        "content-type": ""
      },
      {
        "status": "403",
        "body": {
        },
        "content-type": ""
      },
      {
        "status": "422",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/api/v1/accounts/{account_id}/inbox_members",
    "method": "PATCH",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "type": "array",
          "description": "Array of all active agents",
          "items": {
            "$ref": "#/definitions/agent"
          },
          "definitions": {
            "agent": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "uid": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "available_name": {
                  "type": "string"
                },
                "display_name": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "account_id": {
                  "type": "integer"
                },
                "role": {
                  "type": "string",
                  "enum": [
                    "agent",
                    "administrator"
                  ]
                },
                "confirmed": {
                  "type": "boolean"
                },
                "availability_status": {
                  "type": "string",
                  "enum": [
                    "available",
                    "busy",
                    "offline"
                  ],
                  "description": "The availability status of the agent computed by Chatwoot."
                },
                "auto_offline": {
                  "type": "boolean",
                  "description": "Whether the availability status of agent is configured to go offline automatically when away."
                },
                "custom_attributes": {
                  "type": "object",
                  "description": "Available for users who are created through platform APIs and has custom attributes associated."
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "404",
        "body": {
        },
        "content-type": ""
      },
      {
        "status": "403",
        "body": {
        },
        "content-type": ""
      },
      {
        "status": "422",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/api/v1/accounts/{account_id}/conversations/{conversation_id}/messages",
    "method": "GET",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "type": "array",
          "description": "Array of messages",
          "items": {
            "allOf": [
              {
                "$ref": "#/definitions/generic_id"
              },
              {
                "$ref": "#/definitions/message"
              }
            ]
          },
          "definitions": {
            "generic_id": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number"
                }
              }
            },
            "message": {
              "type": "object",
              "properties": {
                "content": {
                  "type": "string",
                  "description": "The text content of the message"
                },
                "content_type": {
                  "type": "string",
                  "enum": [
                    "text",
                    "input_select",
                    "cards",
                    "form"
                  ],
                  "description": "The type of the template message"
                },
                "content_attributes": {
                  "type": "object",
                  "description": "The content attributes for each content_type"
                },
                "message_type": {
                  "type": "string",
                  "enum": [
                    "incoming",
                    "outgoing",
                    "activity",
                    "template"
                  ],
                  "description": "The type of the message"
                },
                "created_at": {
                  "type": "integer",
                  "description": "The time at which message was created"
                },
                "private": {
                  "type": "boolean",
                  "description": "The flags which shows whether the message is private or not"
                },
                "attachment": {
                  "type": "object",
                  "description": "The file object attached to the image"
                },
                "sender": {
                  "type": "object",
                  "description": "User/Agent/AgentBot object"
                },
                "conversation_id": {
                  "type": "number",
                  "description": "ID of the conversation"
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "404",
        "body": {
        },
        "content-type": ""
      },
      {
        "status": "401",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/api/v1/accounts/{account_id}/conversations/{conversation_id}/messages",
    "method": "POST",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "allOf": [
            {
              "$ref": "#/definitions/generic_id"
            },
            {
              "$ref": "#/definitions/message"
            }
          ],
          "definitions": {
            "generic_id": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number"
                }
              }
            },
            "message": {
              "type": "object",
              "properties": {
                "content": {
                  "type": "string",
                  "description": "The text content of the message"
                },
                "content_type": {
                  "type": "string",
                  "enum": [
                    "text",
                    "input_select",
                    "cards",
                    "form"
                  ],
                  "description": "The type of the template message"
                },
                "content_attributes": {
                  "type": "object",
                  "description": "The content attributes for each content_type"
                },
                "message_type": {
                  "type": "string",
                  "enum": [
                    "incoming",
                    "outgoing",
                    "activity",
                    "template"
                  ],
                  "description": "The type of the message"
                },
                "created_at": {
                  "type": "integer",
                  "description": "The time at which message was created"
                },
                "private": {
                  "type": "boolean",
                  "description": "The flags which shows whether the message is private or not"
                },
                "attachment": {
                  "type": "object",
                  "description": "The file object attached to the image"
                },
                "sender": {
                  "type": "object",
                  "description": "User/Agent/AgentBot object"
                },
                "conversation_id": {
                  "type": "number",
                  "description": "ID of the conversation"
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "404",
        "body": {
        },
        "content-type": ""
      },
      {
        "status": "403",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/api/v1/accounts/{account_id}/conversations/{conversation_id}/messages/{message_id}",
    "method": "DELETE",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
        },
        "content-type": ""
      },
      {
        "status": "401",
        "body": {
        },
        "content-type": ""
      },
      {
        "status": "404",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/api/v1/accounts/{account_id}/integrations/apps",
    "method": "GET",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "type": "array",
          "description": "Array of Integration apps",
          "items": {
            "$ref": "#/definitions/integrations_app"
          },
          "definitions": {
            "integrations_app": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The ID of the integration"
                },
                "name": {
                  "type": "string",
                  "description": "The name of the integration"
                },
                "description": {
                  "type": "string",
                  "description": "The description about the team"
                },
                "hook_type": {
                  "type": "string",
                  "description": "Whether the integration is an account or inbox integration"
                },
                "enabled": {
                  "type": "boolean",
                  "description": "Whether the integration is enabled for the account"
                },
                "allow_multiple_hooks": {
                  "type": "boolean",
                  "description": "Whether multiple hooks can be created for the integration"
                },
                "hooks": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "description": "If there are any hooks created for this integration"
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "401",
        "body": {
        },
        "content-type": ""
      },
      {
        "status": "404",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/api/v1/accounts/{account_id}/integrations/hooks",
    "method": "POST",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "$ref": "#/definitions/integrations_hook",
          "definitions": {
            "integrations_hook": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The ID of the integration hook"
                },
                "app_id": {
                  "type": "string",
                  "description": "The ID of the integration app"
                },
                "inbox_id": {
                  "type": "string",
                  "description": "Inbox ID if its an Inbox integration"
                },
                "account_id": {
                  "type": "string",
                  "description": "Account ID of the integration"
                },
                "status": {
                  "type": "boolean",
                  "description": "Whether the integration hook is enabled for the account"
                },
                "hook_type": {
                  "type": "boolean",
                  "description": "Whether its an account or inbox integration hook"
                },
                "settings": {
                  "type": "object",
                  "description": "The associated settings for the integration"
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "401",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/api/v1/accounts/{account_id}/integrations/hooks/{hook_id}",
    "method": "PATCH",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "$ref": "#/definitions/integrations_hook",
          "definitions": {
            "integrations_hook": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The ID of the integration hook"
                },
                "app_id": {
                  "type": "string",
                  "description": "The ID of the integration app"
                },
                "inbox_id": {
                  "type": "string",
                  "description": "Inbox ID if its an Inbox integration"
                },
                "account_id": {
                  "type": "string",
                  "description": "Account ID of the integration"
                },
                "status": {
                  "type": "boolean",
                  "description": "Whether the integration hook is enabled for the account"
                },
                "hook_type": {
                  "type": "boolean",
                  "description": "Whether its an account or inbox integration hook"
                },
                "settings": {
                  "type": "object",
                  "description": "The associated settings for the integration"
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "401",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/api/v1/accounts/{account_id}/integrations/hooks/{hook_id}",
    "method": "DELETE",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
        },
        "content-type": ""
      },
      {
        "status": "401",
        "body": {
        },
        "content-type": ""
      },
      {
        "status": "404",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/profile",
    "method": "GET",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "$ref": "#/definitions/user",
          "definitions": {
            "user": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number"
                },
                "uid": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "available_name": {
                  "type": "string"
                },
                "display_name": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "account_id": {
                  "type": "number"
                },
                "role": {
                  "type": "string",
                  "enum": [
                    "agent",
                    "administrator"
                  ]
                },
                "confirmed": {
                  "type": "boolean"
                },
                "custom_attributes": {
                  "type": "object",
                  "description": "Available for users who are created through platform APIs and has custom attributes associated."
                },
                "accounts": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/account"
                  }
                }
              }
            },
            "account": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "description": "Account ID"
                },
                "name": {
                  "type": "string",
                  "description": "Name of the account"
                },
                "role": {
                  "type": "string",
                  "enum": [
                    "administrator",
                    "agent"
                  ],
                  "description": "The user role in the account"
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "401",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/api/v1/accounts/{account_id}/teams",
    "method": "GET",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "type": "array",
          "description": "Array of teams",
          "items": {
            "$ref": "#/definitions/team"
          },
          "definitions": {
            "team": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "description": "The ID of the team"
                },
                "name": {
                  "type": "string",
                  "description": "The name of the team"
                },
                "description": {
                  "type": "string",
                  "description": "The description about the team"
                },
                "allow_auto_assign": {
                  "type": "boolean",
                  "description": "If this setting is turned on, the system would automatically assign the conversation to an agent in the team while assigning the conversation to a team"
                },
                "account_id": {
                  "type": "number",
                  "description": "The ID of the account with the team is a part of"
                },
                "is_member": {
                  "type": "boolean",
                  "description": "This field shows whether the current user is a part of the team"
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "401",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/api/v1/accounts/{account_id}/teams",
    "method": "POST",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "$ref": "#/definitions/team",
          "definitions": {
            "team": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "description": "The ID of the team"
                },
                "name": {
                  "type": "string",
                  "description": "The name of the team"
                },
                "description": {
                  "type": "string",
                  "description": "The description about the team"
                },
                "allow_auto_assign": {
                  "type": "boolean",
                  "description": "If this setting is turned on, the system would automatically assign the conversation to an agent in the team while assigning the conversation to a team"
                },
                "account_id": {
                  "type": "number",
                  "description": "The ID of the account with the team is a part of"
                },
                "is_member": {
                  "type": "boolean",
                  "description": "This field shows whether the current user is a part of the team"
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "401",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/api/v1/accounts/{account_id}/teams/{team_id}",
    "method": "GET",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "$ref": "#/definitions/team",
          "definitions": {
            "team": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "description": "The ID of the team"
                },
                "name": {
                  "type": "string",
                  "description": "The name of the team"
                },
                "description": {
                  "type": "string",
                  "description": "The description about the team"
                },
                "allow_auto_assign": {
                  "type": "boolean",
                  "description": "If this setting is turned on, the system would automatically assign the conversation to an agent in the team while assigning the conversation to a team"
                },
                "account_id": {
                  "type": "number",
                  "description": "The ID of the account with the team is a part of"
                },
                "is_member": {
                  "type": "boolean",
                  "description": "This field shows whether the current user is a part of the team"
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "401",
        "body": {
        },
        "content-type": ""
      },
      {
        "status": "404",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/api/v1/accounts/{account_id}/teams/{team_id}",
    "method": "PATCH",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "$ref": "#/definitions/team",
          "definitions": {
            "team": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "description": "The ID of the team"
                },
                "name": {
                  "type": "string",
                  "description": "The name of the team"
                },
                "description": {
                  "type": "string",
                  "description": "The description about the team"
                },
                "allow_auto_assign": {
                  "type": "boolean",
                  "description": "If this setting is turned on, the system would automatically assign the conversation to an agent in the team while assigning the conversation to a team"
                },
                "account_id": {
                  "type": "number",
                  "description": "The ID of the account with the team is a part of"
                },
                "is_member": {
                  "type": "boolean",
                  "description": "This field shows whether the current user is a part of the team"
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "401",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/api/v1/accounts/{account_id}/teams/{team_id}",
    "method": "DELETE",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
        },
        "content-type": ""
      },
      {
        "status": "401",
        "body": {
        },
        "content-type": ""
      },
      {
        "status": "404",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/accounts/{account_id}/teams/{team_id}/team_members",
    "method": "GET",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "type": "array",
          "description": "Array of all agents in the team",
          "items": {
            "$ref": "#/definitions/agent"
          },
          "definitions": {
            "agent": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "uid": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "available_name": {
                  "type": "string"
                },
                "display_name": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "account_id": {
                  "type": "integer"
                },
                "role": {
                  "type": "string",
                  "enum": [
                    "agent",
                    "administrator"
                  ]
                },
                "confirmed": {
                  "type": "boolean"
                },
                "availability_status": {
                  "type": "string",
                  "enum": [
                    "available",
                    "busy",
                    "offline"
                  ],
                  "description": "The availability status of the agent computed by Chatwoot."
                },
                "auto_offline": {
                  "type": "boolean",
                  "description": "Whether the availability status of agent is configured to go offline automatically when away."
                },
                "custom_attributes": {
                  "type": "object",
                  "description": "Available for users who are created through platform APIs and has custom attributes associated."
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "404",
        "body": {
        },
        "content-type": ""
      },
      {
        "status": "403",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/accounts/{account_id}/teams/{team_id}/team_members",
    "method": "POST",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "type": "array",
          "description": "Array of all active agents",
          "items": {
            "$ref": "#/definitions/agent"
          },
          "definitions": {
            "agent": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "uid": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "available_name": {
                  "type": "string"
                },
                "display_name": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "account_id": {
                  "type": "integer"
                },
                "role": {
                  "type": "string",
                  "enum": [
                    "agent",
                    "administrator"
                  ]
                },
                "confirmed": {
                  "type": "boolean"
                },
                "availability_status": {
                  "type": "string",
                  "enum": [
                    "available",
                    "busy",
                    "offline"
                  ],
                  "description": "The availability status of the agent computed by Chatwoot."
                },
                "auto_offline": {
                  "type": "boolean",
                  "description": "Whether the availability status of agent is configured to go offline automatically when away."
                },
                "custom_attributes": {
                  "type": "object",
                  "description": "Available for users who are created through platform APIs and has custom attributes associated."
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "404",
        "body": {
        },
        "content-type": ""
      },
      {
        "status": "403",
        "body": {
        },
        "content-type": ""
      },
      {
        "status": "422",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/accounts/{account_id}/teams/{team_id}/team_members",
    "method": "PATCH",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "type": "array",
          "description": "Array of all agents in the team",
          "items": {
            "$ref": "#/definitions/agent"
          },
          "definitions": {
            "agent": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "uid": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "available_name": {
                  "type": "string"
                },
                "display_name": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "account_id": {
                  "type": "integer"
                },
                "role": {
                  "type": "string",
                  "enum": [
                    "agent",
                    "administrator"
                  ]
                },
                "confirmed": {
                  "type": "boolean"
                },
                "availability_status": {
                  "type": "string",
                  "enum": [
                    "available",
                    "busy",
                    "offline"
                  ],
                  "description": "The availability status of the agent computed by Chatwoot."
                },
                "auto_offline": {
                  "type": "boolean",
                  "description": "Whether the availability status of agent is configured to go offline automatically when away."
                },
                "custom_attributes": {
                  "type": "object",
                  "description": "Available for users who are created through platform APIs and has custom attributes associated."
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "404",
        "body": {
        },
        "content-type": ""
      },
      {
        "status": "403",
        "body": {
        },
        "content-type": ""
      },
      {
        "status": "422",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/accounts/{account_id}/teams/{team_id}/team_members",
    "method": "DELETE",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
        },
        "content-type": ""
      },
      {
        "status": "404",
        "body": {
        },
        "content-type": ""
      },
      {
        "status": "403",
        "body": {
        },
        "content-type": ""
      },
      {
        "status": "422",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/api/v1/accounts/{account_id}/custom_filters",
    "method": "GET",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "type": "array",
          "description": "Array of custom filters",
          "items": {
            "$ref": "#/definitions/custom_filter"
          },
          "definitions": {
            "custom_filter": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "description": "The ID of the custom filter"
                },
                "name": {
                  "type": "string",
                  "description": "The name of the custom filter"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "conversation",
                    "contact",
                    "report"
                  ],
                  "description": "The description about the custom filter"
                },
                "query": {
                  "type": "object",
                  "description": "A query that needs to be saved as a custom filter"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The time at which the custom filter was created"
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The time at which the custom filter was updated"
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "401",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/api/v1/accounts/{account_id}/custom_filters",
    "method": "POST",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "$ref": "#/definitions/custom_filter",
          "definitions": {
            "custom_filter": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "description": "The ID of the custom filter"
                },
                "name": {
                  "type": "string",
                  "description": "The name of the custom filter"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "conversation",
                    "contact",
                    "report"
                  ],
                  "description": "The description about the custom filter"
                },
                "query": {
                  "type": "object",
                  "description": "A query that needs to be saved as a custom filter"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The time at which the custom filter was created"
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The time at which the custom filter was updated"
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "401",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/api/v1/accounts/{account_id}/custom_filters/{custom_filter_id}",
    "method": "GET",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "$ref": "#/definitions/custom_filter",
          "definitions": {
            "custom_filter": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "description": "The ID of the custom filter"
                },
                "name": {
                  "type": "string",
                  "description": "The name of the custom filter"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "conversation",
                    "contact",
                    "report"
                  ],
                  "description": "The description about the custom filter"
                },
                "query": {
                  "type": "object",
                  "description": "A query that needs to be saved as a custom filter"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The time at which the custom filter was created"
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The time at which the custom filter was updated"
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "401",
        "body": {
        },
        "content-type": ""
      },
      {
        "status": "404",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/api/v1/accounts/{account_id}/custom_filters/{custom_filter_id}",
    "method": "PATCH",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "$ref": "#/definitions/custom_filter",
          "definitions": {
            "custom_filter": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "description": "The ID of the custom filter"
                },
                "name": {
                  "type": "string",
                  "description": "The name of the custom filter"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "conversation",
                    "contact",
                    "report"
                  ],
                  "description": "The description about the custom filter"
                },
                "query": {
                  "type": "object",
                  "description": "A query that needs to be saved as a custom filter"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The time at which the custom filter was created"
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The time at which the custom filter was updated"
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "401",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/api/v1/accounts/{account_id}/custom_filters/{custom_filter_id}",
    "method": "DELETE",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
        },
        "content-type": ""
      },
      {
        "status": "401",
        "body": {
        },
        "content-type": ""
      },
      {
        "status": "404",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/api/v1/accounts/{account_id}/webhooks",
    "method": "GET",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "type": "array",
          "description": "Array of webhook objects",
          "items": {
            "$ref": "#/definitions/webhook"
          },
          "definitions": {
            "webhook": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "description": "The ID of the webhook"
                },
                "url": {
                  "type": "string",
                  "description": "The url to which the events will be send"
                },
                "subscriptions": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "conversation_created",
                      "conversation_status_changed",
                      "conversation_updated",
                      "message_created",
                      "message_updated",
                      "webwidget_triggered"
                    ]
                  },
                  "description": "The list of subscribed events"
                },
                "account_id": {
                  "type": "number",
                  "description": "The id of the account which the webhook object belongs to"
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "401",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/api/v1/accounts/{account_id}/webhooks",
    "method": "POST",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "$ref": "#/definitions/webhook",
          "definitions": {
            "webhook": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "description": "The ID of the webhook"
                },
                "url": {
                  "type": "string",
                  "description": "The url to which the events will be send"
                },
                "subscriptions": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "conversation_created",
                      "conversation_status_changed",
                      "conversation_updated",
                      "message_created",
                      "message_updated",
                      "webwidget_triggered"
                    ]
                  },
                  "description": "The list of subscribed events"
                },
                "account_id": {
                  "type": "number",
                  "description": "The id of the account which the webhook object belongs to"
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "401",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/api/v1/accounts/{account_id}/webhooks/{webhook_id}",
    "method": "PATCH",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "$ref": "#/definitions/webhook",
          "definitions": {
            "webhook": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "description": "The ID of the webhook"
                },
                "url": {
                  "type": "string",
                  "description": "The url to which the events will be send"
                },
                "subscriptions": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "conversation_created",
                      "conversation_status_changed",
                      "conversation_updated",
                      "message_created",
                      "message_updated",
                      "webwidget_triggered"
                    ]
                  },
                  "description": "The list of subscribed events"
                },
                "account_id": {
                  "type": "number",
                  "description": "The id of the account which the webhook object belongs to"
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "401",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/api/v1/accounts/{account_id}/webhooks/{webhook_id}",
    "method": "DELETE",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
        },
        "content-type": ""
      },
      {
        "status": "401",
        "body": {
        },
        "content-type": ""
      },
      {
        "status": "404",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/api/v2/accounts/{account_id}/reports",
    "method": "GET",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "type": "array",
          "description": "Array of date based conversation statistics",
          "items": {
            "type": "object",
            "properties": {
              "value": {
                "type": "string"
              },
              "timestamp": {
                "type": "number"
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "404",
        "body": {
        },
        "content-type": ""
      },
      {
        "status": "403",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/api/v2/accounts/{account_id}/reports/summary",
    "method": "GET",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "$ref": "#/definitions/account_summary",
          "definitions": {
            "account_summary": {
              "type": "object",
              "properties": {
                "avg_first_response_time": {
                  "type": "string"
                },
                "avg_resolution_time": {
                  "type": "string"
                },
                "conversations_count": {
                  "type": "number"
                },
                "incoming_messages_count": {
                  "type": "number"
                },
                "outgoing_messages_count": {
                  "type": "number"
                },
                "resolutions_count": {
                  "type": "number"
                },
                "previous": {
                  "type": "object",
                  "properties": {
                    "avg_first_response_time": {
                      "type": "string"
                    },
                    "avg_resolution_time": {
                      "type": "string"
                    },
                    "conversations_count": {
                      "type": "number"
                    },
                    "incoming_messages_count": {
                      "type": "number"
                    },
                    "outgoing_messages_count": {
                      "type": "number"
                    },
                    "resolutions_count": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "404",
        "body": {
        },
        "content-type": ""
      },
      {
        "status": "403",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/api/v2/accounts/{account_id}/reports/conversations",
    "method": "GET",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "type": "object",
          "description": "Object of account conversation metrics",
          "properties": {
            "open": {
              "type": "number"
            },
            "unattended": {
              "type": "number"
            },
            "unassigned": {
              "type": "number"
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "404",
        "body": {
        },
        "content-type": ""
      },
      {
        "status": "403",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  },
  {
    "path": "/api/v2/accounts/{account_id}/reports/conversations",
    "method": "GET",
    "content-type": "",
    "requests": [

    ],
    "responses": [
      {
        "status": "200",
        "body": {
          "type": "array",
          "description": "Array of agent based conversation metrics",
          "items": {
            "$ref": "#/definitions/agent_conversation_metrics"
          },
          "definitions": {
            "agent_conversation_metrics": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number"
                },
                "name": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "thumbnail": {
                  "type": "string"
                },
                "availability": {
                  "type": "string"
                },
                "metric": {
                  "type": "object",
                  "properties": {
                    "open": {
                      "type": "number"
                    },
                    "unattended": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        },
        "content-type": ""
      },
      {
        "status": "404",
        "body": {
        },
        "content-type": ""
      },
      {
        "status": "403",
        "body": {
        },
        "content-type": ""
      }
    ],
    "resource": ""
  }
]